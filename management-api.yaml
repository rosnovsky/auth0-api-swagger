openapi: 3.0.0
info:
  description: >-
    This document describes the Auth0 Management API, which is meant to be used by back-end servers or trusted parties performing administrative tasks. Generally speaking, anything that can be done through the Auth0 dashboard (and more) can also be done through this API.


    This API is separate from the publicly accessible Auth0 Authentication API, which is meant to be used by front-ends and untrusted parties.
    
    
    When using the code samples, requests should be sent with a Content-Type of application/json.
  version: 2.0.0
  # x-ibm-name: ClientCredentialsFlow
  title: Auth0 Management API

security:
  - bearer: 
    - "read:branding"
    - "update:branding"
servers:
- url: https://{tenant}.auth0.com
  description: Auth0 Management API
  variables:
    tenant:
      default: demo
      description: this value is assigned by the service provider, in this example `gigantic-server.com`
paths:
  /api/v2/branding:
    get:
      summary: >-
        Get Branding settings
      description: >-
        Retrieve branding settings.
      operationId: GetBrandignSettings
      tags:
        - Branding Settings
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandingSettingsResponse'
        '401':
          description: Invalid token or Invalid signature received for JSON Web Token validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: "The specified client cannot perform the requested operation or Insufficient scope; expected any of: read:branding."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: >-
        Update branding settings.
      description: >-
        Update branding settings.
      parameters:
        - 
          name: body
          in: query
          description: Branding object
          required: true
          schema:
            type: string
            example: {"colors": {
              "primary": "#FFFFFF",
              "page_background": { type: 'linear-gradient', start: '#FFFFFF', end: '#000000', angle_deg: 35 }
            },
            "favicon_url": "https://example.com/favicon.ico",
            "logo_url": "https://example.com/logo.png",
            "font": {
              "url": "https://example.com/font.woff"
            }
          }
      operationId: UpdateBrandignSettings
      tags:
        - Branding Settings
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandingSettingsPatchResponse'
        '401':
          description: Invalid token or Invalid signature received for JSON Web Token validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: "The specified client cannot perform the requested operation or Insufficient scope; expected any of: update:branding."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    bearer:
      description: "Auth0 Management API Explorer token"
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    BrandingSettingsResponse:
      type: object
      
      properties:
        color:
          type: object
          properties:
            primary:
              description: Accent color.
              type: string
              example: "#FFFFFF"
            page_background:
              description: Page Background Color or Gradient. Property contains either null to unset, a solid color as a string value '#FFFFFF', or a gradient as an object.
              type: string
              example: "{ type: 'linear-gradient', start: '#FFFFFF', end: '#000000', angle_deg: 35 }"
          example: {
            "colors": {
              "primary": "",
              "page_background": ""
            }}
        favicon_url:
          type: string
          description: URL for the favicon. Must use HTTPS.
          example: "https://example.com/favicon.ico"
        logo_url:
          type: string
          description: URL for the logo. Must use HTTPS.
          example: "https://example.com/logo.png"
        font:
          type: object
          properties:
            url:
              description: URL for the custom font. The URL must point to a font file and not a stylesheet. Must use HTTPS.
              type: string
              example: "https://example.com/font.woff"
      example: {
        "colors": {
          "primary": "#FFFFFF",
          "page_background": { type: 'linear-gradient', start: '#FFFFFF', end: '#000000', angle_deg: 35 }
        },
        "favicon_url": "https://example.com/favicon.ico",
        "logo_url": "https://example.com/logo.png",
        "font": {
          "url": "https://example.com/font.woff"
        }
      }
    
    BrandingSettingsPatchResponse:
      type: object
      properties:
        color:
          type: object
          properties:
            primary:
              description: Accent color.
              type: string
              example: "#FFFFFF"
            page_background:
              description: Page Background Color or Gradient. Property contains either null to unset, a solid color as a string value '#FFFFFF', or a gradient as an object.
              type: string
              example: "{ type: 'linear-gradient', start: '#FFFFFF', end: '#000000', angle_deg: 35 }"
          example: {
            "colors": {
              "primary": "",
              "page_background": ""
            }}
        favicon_url:
          type: string
          description: URL for the favicon. Must use HTTPS.
          example: "https://example.com/favicon.ico"
        logo_url:
          type: string
          description: URL for the logo. Must use HTTPS.
          example: "https://example.com/logo.png"
        font:
          type: object
          properties:
            url:
              description: URL for the custom font. The URL must point to a font file and not a stylesheet. Must use HTTPS.
              type: string
              example: "https://example.com/font.woff"
      example: {
        "colors": {
          "primary": "#FFFFFF",
          "page_background": { type: 'linear-gradient', start: '#FFFFFF', end: '#000000', angle_deg: 35 }
        },
        "favicon_url": "https://example.com/favicon.ico",
        "logo_url": "https://example.com/logo.png",
        "font": {
          "url": "https://example.com/font.woff"
        }
      }
      
    ErrorResponse:
      properties:
        error:
          description: Error code as per http spec
          type: string
          example: unauthorized
        error_description:
          description: Human readable description of the error
          type: string
          example: "Insufficient scope; expected any of: read:branding."
        error_uri:
          description: URI to human readable documentation of the error (optional)
          type: string
          example: https://auth0.com/docs/clients/client-grant-types
      required:
        - error
        - error_description
